---
import Section from "../layouts/Section.astro";
---

<section class="movies">
    <h1>Studio Ghibli - Peliculas</h1>

    <div id="cardList" class="cardList"></div>

    <template id="template">
        <div id="card" class="card">
            <div class="cardInfo">
                <h1 id="title">title</h1>
                <h2 id="description">description</h2>
                <h3 id="release_date">release_date</h3>
            </div>
        </div>
    </template>
</section>

<style>
    .movies {
        max-width: 100%;
        height: 100vh;
    }
    .cardList {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        place-items: center;
        row-gap: 30px;
    }

    .card {
        position: relative;
        width: 300px;
        height: 400px;
        border-radius: 10px;
        background-image: url(../../public/media/castle.png);
        background-color: rgb(100, 100, 100);
        background-blend-mode: soft-light;
        border: 1px solid beige;
        box-shadow: 3px 3px 3px white;
        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;
        padding: 0 10px;
    }
    .cardInfo {
        position: absolute;
        bottom: 10px;
        width: 100%;
        height: 100px;
        display: grid;
        color: black;
    }

    .cardInfo h1 {
        font-size: 40px;
        margin: 0;
    }
    .cardInfo h2 {
        font-size: 15px;
        margin: 0;
    }
    .cardInfo h3 {
        font-size: 10px;
        margin: 0;
    }
</style>

<script>
    
    const template = document.getElementById("template").content;
    const fragment = document.createDocumentFragment();
    const cardList = document.getElementById("cardList");
    const url = `https://ghibliapi.vercel.app/films`;

    document.addEventListener('DOMContentLoaded', ()=>{
        getApiInfo();
    });

    const getApiInfo = async () => {
        try {
            const infoRoot = await fetch(url);
            const infoJson = await infoRoot.json();
            datos(infoJson)
        } catch (error) {
            console.log(error);
        }
    };

    const datos = (array) => {
        array.forEach((element) => {    
            const {title, image} = element;
            template.querySelector('h1').textContent = title;
            template.querySelector('.card').style.setProperty('background-image', `url(${image})`); 
            // card.style.setProperty('background-image', `url(${image})`);
            const clone = template.cloneNode(true);
            fragment.appendChild(clone);
        });
        cardList.appendChild(fragment);
    };
</script>
